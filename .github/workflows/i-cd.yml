name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 120  # Increase the timeout as necessary

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use the latest LTS version of Node.js

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build the project for production
        env:
          NODE_ENV: production
        run: npm run build:prod

  deploy:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 60  # Increase the timeout as necessary

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Deploy to server
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
        run: |
          # Create a script to run on the remote server
          remote_script=$(cat << 'EOF'
          cd $PROJECT_PATH
          git pull origin main
          npm install --production --legacy-peer-deps
          npm run build:prod
          sudo iisreset
          EOF
          )
          echo "$remote_script" > remote-script.sh
          chmod +x remote-script.sh
          # Use sshpass to run the script on the remote server
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no Maher@109.199.119.120 'bash -s' < remote-script.sh

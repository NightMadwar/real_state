name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use the latest LTS version of Node.js

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build the project for production
        env:
          NODE_ENV: production
        run: npm run build:prod

      - name: Run tests
        run: npm test

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install OpenSSH Client
        run: |
          Add-WindowsCapability -Online -Name OpenSSH.Client

      - name: Deploy to server
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
        run: |
          # Create the .ssh directory if it doesn't exist
          if (-not (Test-Path -Path $env:USERPROFILE\.ssh)) {
            New-Item -Path $env:USERPROFILE\.ssh -ItemType Directory
          }
          # Write the SSH password to a file
          $env:SSH_PASSWORD | ConvertTo-SecureString -AsPlainText -Force | ConvertFrom-SecureString | Out-File "$env:USERPROFILE\.ssh\password.txt"
          # Create a script to run on the remote server
          $remoteScript = @"
          cd $env:PROJECT_PATH
          git pull origin main
          npm install --production --legacy-peer-deps
          npm run build:prod
          iisreset
          "@
          $remoteScript | Out-File "$env:USERPROFILE\remote-script.ps1"
          # Run the script on the remote server using ssh
          Start-Process ssh -ArgumentList @('-o', 'StrictHostKeyChecking=no', 'Maher@109.199.119.120', '-p', '22', 'powershell.exe -File remote-script.ps1') -NoNewWindow -Wait
